// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/microsoft/": {
            "get": {
                "description": "microsoftAuth link for getting code (authorization code)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MicrosoftAuth"
                ],
                "summary": "microsoftAuth link",
                "operationId": "microsoftAuth-link",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        },
        "/auth/microsoft/tokens": {
            "get": {
                "description": "Fetch microsoft tokens using microsoft account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MicrosoftAuth"
                ],
                "summary": "fetch microsoft tokens",
                "operationId": "microsoftAuth-tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pass the code that we get through the microsoftAuth link",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        },
        "/internal/jwt": {
            "get": {
                "description": "jwt for organization service call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PublicAPI"
                ],
                "summary": "jwt for organization service",
                "operationId": "jwt-for-organization",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JWTToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        },
        "/internal/organization/{organization-id}": {
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "delete organization after verifying otp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PublicAPI"
                ],
                "summary": "delete organization",
                "operationId": "organization-delete",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.OrganizationListOfUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        },
        "/internal/organizations": {
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "fetch organization list of users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PublicAPI"
                ],
                "summary": "fetch organization list of users",
                "operationId": "organization-list-of-users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.OrganizationListOfUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        },
        "/organization/": {
            "put": {
                "security": [
                    {
                        "UserIDAuth": []
                    }
                ],
                "description": "update organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "update organization",
                "operationId": "update-organization",
                "parameters": [
                    {
                        "description": "The input for update organization",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateOrganizationDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "UserIDAuth": []
                    }
                ],
                "description": "create organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "create organization",
                "operationId": "create-organization",
                "parameters": [
                    {
                        "description": "The input for create organization",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateOrganization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.OrganizationID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        },
        "/organization/delete/otp": {
            "post": {
                "security": [
                    {
                        "UserIDAuth": []
                    }
                ],
                "description": "otp for delete organization on owners's registered mail/phoneNumber",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "otp for delete organization",
                "operationId": "delete-organization",
                "parameters": [
                    {
                        "description": "The input for update organization",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OrganizationID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        },
        "/organization/invitation/": {
            "post": {
                "security": [
                    {
                        "UserIDAuth": []
                    }
                ],
                "description": "invitaton for join organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrganizationInvitation"
                ],
                "summary": "invitaton to organization",
                "operationId": "invitation-to-organization",
                "parameters": [
                    {
                        "description": "The input for invite to organization",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.InvitationToOrganization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        },
        "/organization/invitations/": {
            "get": {
                "security": [
                    {
                        "UserIDAuth": []
                    }
                ],
                "description": "track all invitations of user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrganizationInvitation"
                ],
                "summary": "track all invitations",
                "operationId": "track-invitations-of-user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.InvitationDetails"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "UserIDAuth": []
                    }
                ],
                "description": "accept or reject organization invitation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrganizationInvitation"
                ],
                "summary": "respond to invitations",
                "operationId": "respond-to-invitation",
                "parameters": [
                    {
                        "description": "The input for respond to invitation",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RespondToInvitation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        },
        "/organization/members/": {
            "delete": {
                "security": [
                    {
                        "UserIDAuth": []
                    }
                ],
                "description": "remove organization member from the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrganizationMember"
                ],
                "summary": "remove organization member",
                "operationId": "remove-organization-member",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "organization",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "member",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        },
        "/organization/members/role/": {
            "put": {
                "security": [
                    {
                        "UserIDAuth": []
                    }
                ],
                "description": "update organization memeber role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrganizationMember"
                ],
                "summary": "update organization memeber role",
                "operationId": "update-member-role",
                "parameters": [
                    {
                        "description": "The input for update organization member role",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateMemberRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        },
        "/organization/members/transfer-ownership": {
            "put": {
                "security": [
                    {
                        "UserIDAuth": []
                    }
                ],
                "description": "transfer organization ownership by the owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrganizationMember"
                ],
                "summary": "transfer organization ownership",
                "operationId": "transfer-organization-ownership",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "organization",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": " ",
                        "name": "member",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        },
        "/organization/{organization-id}/member/leave": {
            "delete": {
                "security": [
                    {
                        "UserIDAuth": []
                    }
                ],
                "description": "organization member leave the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrganizationMember"
                ],
                "summary": "leave organization",
                "operationId": "leave-organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organizationID",
                        "name": "organization-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        },
        "/user/organizations/": {
            "get": {
                "security": [
                    {
                        "UserIDAuth": []
                    }
                ],
                "description": "fetch all organizations of current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserOrganizationData"
                ],
                "summary": "fetch all organizations",
                "operationId": "organizations-of-user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AllOrganizationDetailsOfUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        },
        "/user/organizations/{organization-id}": {
            "get": {
                "security": [
                    {
                        "UserIDAuth": []
                    }
                ],
                "description": "fetch organization details of current user by organizationID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserOrganizationData"
                ],
                "summary": "fetch organization details of current user",
                "operationId": "organization-of-user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.OrganizationDetailsOfUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.CustomError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "error.CustomError": {
            "type": "object",
            "required": [
                "errorMessage",
                "statusCode"
            ],
            "properties": {
                "errorMessage": {
                    "type": "string"
                },
                "invalidData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/error.InvalidData"
                    }
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        },
        "error.InvalidData": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "field": {
                    "type": "string"
                }
            }
        },
        "request.CreateOrganization": {
            "type": "object",
            "properties": {
                "Privacy": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.InvitationToOrganization": {
            "type": "object",
            "required": [
                "invitee",
                "organizationID"
            ],
            "properties": {
                "invitee": {
                    "type": "string"
                },
                "organizationID": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "request.OrganizationID": {
            "type": "object",
            "required": [
                "organizationID"
            ],
            "properties": {
                "organizationID": {
                    "type": "string"
                }
            }
        },
        "request.RespondToInvitation": {
            "type": "object",
            "required": [
                "organizationID"
            ],
            "properties": {
                "invitationAccept": {
                    "type": "boolean"
                },
                "organizationID": {
                    "type": "string"
                }
            }
        },
        "request.UpdateMemberRole": {
            "type": "object",
            "required": [
                "memberID",
                "organizationID"
            ],
            "properties": {
                "memberID": {
                    "type": "string"
                },
                "organizationID": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "request.UpdateOrganizationDetails": {
            "type": "object",
            "required": [
                "organizationID"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "organizationID": {
                    "type": "string"
                },
                "privacy": {
                    "type": "string"
                }
            }
        },
        "response.AllOrganizationDetailsOfUser": {
            "type": "object",
            "properties": {
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Organization"
                    }
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "response.InvitationDetails": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "invitedAt": {
                    "type": "string"
                },
                "invitedBy": {
                    "type": "string"
                },
                "organizationID": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "response.JWTToken": {
            "type": "object",
            "properties": {
                "jwtToken": {
                    "type": "string"
                }
            }
        },
        "response.Organization": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organizationID": {
                    "type": "string"
                },
                "organizationMembers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.OrganizationMember"
                    }
                },
                "ownerID": {
                    "type": "string"
                },
                "privacy": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                }
            }
        },
        "response.OrganizationDetailsOfUser": {
            "type": "object",
            "properties": {
                "organization": {
                    "$ref": "#/definitions/response.Organization"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "response.OrganizationID": {
            "type": "object",
            "properties": {
                "organizationID": {
                    "type": "string"
                }
            }
        },
        "response.OrganizationInfoOfUser": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "organizationID": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "response.OrganizationListOfUser": {
            "type": "object",
            "properties": {
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.OrganizationInfoOfUser"
                    }
                },
                "userIDs": {
                    "type": "string"
                }
            }
        },
        "response.OrganizationMember": {
            "type": "object",
            "properties": {
                "firstname": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "UserIDAuth": {
            "type": "apiKey",
            "name": "Auth-user",
            "in": "header"
        },
        "jwtAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "for microsoft login,tokens",
            "name": "MicrosoftAuth"
        },
        {
            "description": "Organization create, update, delete",
            "name": "Organization"
        },
        {
            "description": "Organization member role update, leave organization, remove member, transfer ownership",
            "name": "OrganizationMember"
        },
        {
            "description": "sent, respond, track of invitation",
            "name": "OrganizationInvitation"
        },
        {
            "description": "get users organizations details",
            "name": "UserOrganizationData"
        },
        {
            "description": "inter service apis",
            "name": "PublicAPI"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9000/",
	BasePath:         "",
	Schemes:          []string{"http"},
	Title:            "Organization-Service API",
	Description:      "Organization service for create/update/delete organization for user. It allows to invite/remove other users, assign them role and update their roles.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
